## activationCode is the product activation code.
##
## Default value: (none)
activationCode: DK-6TNQ-5XJRM-9ZM65-KUUU4-DMHZL-8ZZAP

auth:
  ## secretSeed is used as part of the password generation process for
  ## all auto-generated internal passwords, ensuring that each installation of
  ## Deep Security Smart Check has different passwords.
  ##
  ## Default value: {must be provided by the installer}
  secretSeed: YOUR-SECRET-HERE

  saml:
    ## enabled controls whether SAML authentication will be enabled.
    ##
    ## `location` is also required to be set for SAML authentication to be fully enabled.
    ##
    ## Default value: false
    enabled: false

    ## location is the location of the SAML assertion consumer service. This should be set to
    ## the DNS name that your users will use to access Deep Security Smart Check, for example
    ## `smartcheck.example.com`. If your users will access Deep Security Smart Check on a non-standard
    ## port, you can include the port number as well, for example `smartcheck.example.com:8443`.
    ## The value will be expanded to set the URL scheme and path if not provided, so if `location` is
    ## set to `smartcheck.example.com`, then the final value will be `https://smartcheck.example.com/saml`).
    ##
    ## If `location` is not set, then SAML authentication will not be enabled regardless of the
    ## setting of `enabled`.
    ##
    ## Default value: (none)
    location:

    ## entityID is the SAML entity ID for Deep Security Smart Check as a service provider.
    ## If not provided, the default is copied from the `location` value after expansion (for example,
    ## if `location` is set to `smartcheck.example.com`, then `entityID` will be
    ## `https://smartcheck.example.com/saml`).
    ##
    ## Default value: derived from the `location` value.
    entityID:

    ## maxRoles is the maximum number of roles that Deep Security Smart Check will permit in a
    ## SAML assertion.
    ##
    ## Default value: 10
    maxRoles: 10

  ## roleName is the name of the default administrator role that the system creates on startup.
  ## If a role with this name already exists, no action will be taken.
  ##
  ## Default value: administrator
  roleName: administrator

  ## auditorRoleName is the name of the default auditor role that the system creates on startup.
  ## If a role with this name already exists, no action will be taken.
  ##
  ## Default value: auditor
  auditorRoleName: auditor

  ## userRoleName is the name of the default user role that the system creates on startup.
  ## If a role with this name already exists, no action will be taken.
  ##
  ## Default value: user
  userRoleName: user

  ## userName is the name of the default administrator user that the system creates on startup.
  ## If a user with this name already exists, no action will be taken.
  ##
  ## Default value: administrator
  userName: admin

  ## password is the password assigned to the default administrator that the system creates on startup.
  ## If a user with the name `auth.userName` already exists, no action will be taken.
  ##
  ## Default value: a generated password derived from the secretSeed and system details
  password: admin

  ## audience is the value inserted into the JWT token for authentication.
  ##
  ## Default value: deepsecurity-smartcheck
  audience: deepsecurity-smartcheck

  ## Session tokens are issued for a specific duration.
  ## This must be less than `auth.sessionKeyLifetime`.
  ##
  ## Default value: 1h
  ## Minimum value: 15m
  ## Maximum value: `auth.sessionKeyLifetime`
  sessionDuration: 1h

  ## Session tokens are signed by a key that is rotated every `auth.sessionKeyLifetime`.
  ## This must be greater than `auth.sessionDuration`.
  ##
  ## Default value: 24h
  ## Minimum value: 1h
  ## Maximum value: 168h
  sessionKeyLifetime: 24h
